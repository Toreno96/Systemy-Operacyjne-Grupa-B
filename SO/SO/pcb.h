#pragma once
#include <string>
#include "semaphore.h"

struct PCB // BLOK KONTROLNY PROCESU
{
	std::string NAME_CHARACTER;				//NAZWA PROCESU (zmieniÊ na char* 8 znakowy?)
	PCB* NEXT_PCB_THIS_GROUP;				//WSKAèNIK DO NAST PNEGO BLOKU PCB TEJ GRUPY
	PCB* LAST_PCB_THIS_GROUP;				//WSKAèNIK DO POPRZEDNIEGO BLOKU PCB TEJ GRUPY
	PCB* NEXT_PCB_ALL;						//WSKAèNIK DO NAST PNEGO BLOKU NIEZALEØNIE OD PODZIA£U NA GRUPY
	PCB* LAST_PCB_ALL;						//WSKAèNIK DO POPRZEDNIEGO BLOKU NIEZALEØNIE OD PODZIA£U NA GRUPY
	bool STOPPED;							//R”WNY ZERU, GDY PROCES Z NIM ZWI•ZANY NIE JEST ZATRZYMANY
	bool BLOCKED;							//R”WNY ZERU, GDY PROCES Z NIM ZWI•ZANY NIE JEST ZABLOKOWANY
	char IN_SMC;							//NIEZEROWY, GDY PROCES WSZED£ W SEKCJ  SMC - LICZBA OZNACZAJ•CA STOPIE— ZAGNIEØDZENIA
	bool STOP_WAITING;						//WARTOå∆ JEDEN, GDY ISTNIEJE Ø•DANIE ZATRZYMANIA, CZEKAJ•CE AØ PROCES OPUåCI SEKCJ  SMC
	Semaphore MESSAGE_SEMAPHORE_COMMON;		//
	Semaphore MESSAGE_SEMAPHORE_RECEIVER;	//
	Semaphore* FIRST_MESSAGE;				//WSKAèNIK DO PIERWSZEGO KOMUNIKATU OCZEKUJ•CEGO NA PRZECZYTANIE PRZEZ PROCES
											//NIE MA ZNACZENIA PRZY WARTOåCI 'MESSAGE_SEMAPHORE_RECEIVER = 0;
	PCB* NEXT_SEMAPHORE_WAITER;				//KOLEJNY CZEKAJ•CY POD SEMAFOREM, POCZ•TEK LISTY WSKAZYWANY PRZEZ SEMAFOR. D£UGOå∆ LISTY = MAX(0, -WARTOå∆_SEMAFORA)
	Semaphore STOPPER_SEMAPHORE;			//SEMAFOR ZATRZYMUJ•CEGO
	int AUTO_STORAGE_SIZE;					//LICZBA BAJT”W PRZYDZIELONA PROCESOWI NA SPECJALNY OBSZAR ROBOCZY
	int AUTO_STORAGE_ADDRESS;				//ADRES PAMI CI W£ASNEJ (pewnie trzeba bÍdzie zmieniÊ na wskaünik na bajt od Piotrka)

	// czy potrzebujemy obszarÛw ochronnych?

};